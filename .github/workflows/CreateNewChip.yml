name: Create new chip
env:
      NEW_CHIP: ${{ github.event.client_payload.newChip }}
      TEMPLATE_CHIP: ${{ github.event.client_payload.templateChip }}
#                                   
on: 
 #pull_request: 
 #push:
  repository_dispatch:
    branches: [ master ]
    types: on-create-new-chip
    

jobs:
      
  #Test_secrets:
   #runs-on: windows-latest 
      ##runs-on: ubuntu-latest
    
    
    
    
    
   #steps:  
     #- name: Get CICDassist
       #uses: actions/checkout@v2
       #with: 
        #token: ${{ secrets.GITHUB_TOKEN }}
        #repository: JuliProg/CICDtools
        #path: my-tools
         
     #- name: Test PAT
       #env: 
            #MYSERVERPAT :  ${{ secrets.JP_PAT }} 
       #working-directory: my-tools
       #run :  .\CICDassist.exe --test "$env:MYSERVERPAT"
                       
             
  refactoring_repo:
    #runs-on: windows-latest 
    runs-on: ubuntu-latest
    env:
         ACCESS_TOKEN: ${{ secrets.BB_PAT_FORCICDTOOLS }} 
        
    steps:
    - name: Checkout new chip repo
      uses: actions/checkout@v2
      with:
       path: chip
       token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get CICDassist
      uses: actions/checkout@v2
      with: 
       token: ${{ secrets.GITHUB_TOKEN }}
       repository: JuliProg/CICDtools
       path: my-tools
    
    #- name : computer info
      #shell: pwsh
      #run: uname -v
      
      
    #- name: view directoris
       ##working-directory: chip
       ##id: step_1
      
      #shell: pwsh
      #run: |
           #ls -R
           ##ls chip
           ##cd ..
           ##ls my-tools
           ## Get-Content -Path chip\README.md
           ##Get-ComputerInfo
           ##ping somee.com
           ##curl --help
           ##Set-Content -Path CI_CD\file.txt -Value test
           
          
    #- name: delete file from repo
      #shell: pwsh  
      #run: |   
           ##PowerShell command
           #Remove-Item  .\chip\CI_CD\*.txt
           
           
    #- name: add file to repo
      #shell: pwsh  
      #run: |   
           ##PowerShell command
           #New-Item .\chip\CI_CD\$(Get-Date -Format 'mmHHddMMyyyy').txt
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0

    - name: start my tools by actions/setup-dotnet@v1.5.0
      working-directory: my-tools
      #shell: pwsh 
      #PowerShell command .Start mytools
      run : dotnet CICDassist.dll --create $NEW_CHIP $TEMPLATE_CHIP
    
    #- name: start my tools from my-self publish        
      ##shell: pwsh 
      #working-directory: my-tools 
      
      #run: |
           ##Provide execute permissions
           #chmod 777 ./CICDassist
           ##Execute the application
           #./CICDassist
           
           
    - name: Push repo-changes to GitHub 
      working-directory: chip
      
      run: |
           git config --global user.email "juliprog1110.gmail.com"
           git config --global user.name "JuliProg"
           #git remote -v
           
           git add .
           #git status
           #git add -A
           #git commit -m "Automated report"
           git commit -m 'automated add new chip'
           git push origin master
   
    
    
   
  Build_new_chip:
    runs-on: windows-latest 
      ##runs-on: ubuntu-latest
    needs:  refactoring_repo
    
    
    
    
    steps:
     
    #- name: Get JPassist
      #uses: actions/checkout@v2
      #with: 
       #token: ${{ secrets.GITHUB_TOKEN }}
       #repository: JuliProg/Software
       #path: my-tools
       
    - name: Checkout new chip repo
      uses: actions/checkout@v2
      with:
       path: chip
       token: ${{ secrets.GITHUB_TOKEN }} 
       
    - name: view directoris on windows
      working-directory: chip
       ##id: step_1
      
       ##shell: pwsh
      run: ls -R

    - name: Get new chip dependency
      uses: actions/checkout@v2
      with: 
       token: ${{ secrets.GITHUB_TOKEN }}
       repository: JuliProg/Software
       path: references

    - name: Get CICDassist
      uses: actions/checkout@v2
      with: 
       token: ${{ secrets.GITHUB_TOKEN }}
       repository: JuliProg/CICDtools
       path: my-tools
       
    #- name: view directoris on windows
       ##working-directory: chip
       ##id: step_1
      
       ##shell: pwsh
      #run: ls -R
            
      
    - name: Prepaire project enviroment 
      working-directory: my-tools
      #shell: pwsh 
      #PowerShell command .Start mytools
      run : .\CICDassist.exe --prebuild
           
    - name: View csproj
      working-directory: chip
      run: get-content .\*\*.csproj
    
    - name: build new chip
      working-directory: chip
      run: dotnet build -o ..\publish
    #- name: start my tools on win
      #run: .\my-tools\CICDassist.exe
           
    - name: publish new chip
      env: 
        MYSERVERPAT :  ${{ secrets.JP_PAT }} 
      working-directory: my-tools
      run : .\CICDassist.exe --publish "$env:NEW_CHIP" "$env:MYSERVERPAT"
      
     
   
