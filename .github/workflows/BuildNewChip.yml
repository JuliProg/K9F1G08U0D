name: Build new chip
env:
      NEW_CHIP: ${{ github.event.client_payload.newChip }}
      #TEMPLATE_CHIP: ${{ github.event.client_payload.templateChip }}
#                                   
on: 
 #pull_request: 
 #push:
  repository_dispatch:
    branches: [ master ]
    types: on-build-new-chip
    
    jobs:
      
  #Test_secrets:
   #runs-on: windows-latest 
      ##runs-on: ubuntu-latest
    
    
    
    
    
   #steps:  
     #- name: Get CICDassist
       #uses: actions/checkout@v2
       #with: 
        #token: ${{ secrets.GITHUB_TOKEN }}
        #repository: JuliProg/CICDtools
        #path: my-tools
         
     #- name: Test PAT
       #env: 
            #MYSERVERPAT :  ${{ secrets.JP_PAT }} 
       #working-directory: my-tools
       #run :  .\CICDassist.exe --test "$env:MYSERVERPAT"
    Build_new_chip:
    runs-on: windows-latest 
      ##runs-on: ubuntu-latest
    #needs:  refactoring_repo
    
    
    
    
    steps:
     
    #- name: Get JPassist
      #uses: actions/checkout@v2
      #with: 
       #token: ${{ secrets.GITHUB_TOKEN }}
       #repository: JuliProg/Software
       #path: my-tools
       
    - name: Checkout new chip repo
      uses: actions/checkout@v2
      with:
       path: chip
       token: ${{ secrets.GITHUB_TOKEN }} 

    - name: Get new chip dependency
      uses: actions/checkout@v2
      with: 
       token: ${{ secrets.GITHUB_TOKEN }}
       repository: JuliProg/Software
       path: references

    - name: Get CICDassist
      uses: actions/checkout@v2
      with: 
       token: ${{ secrets.GITHUB_TOKEN }}
       repository: JuliProg/CICDtools
       path: my-tools
       
    #- name: view directoris on windows
       ##working-directory: chip
       ##id: step_1
      
       ##shell: pwsh
      #run: ls -R
            
      
    - name: Prepaire project enviroment 
      working-directory: my-tools
      #shell: pwsh 
      #PowerShell command .Start mytools
      run : .\CICDassist.exe --prebuild
           
    
    
    - name: build new chip
      working-directory: chip
      run: dotnet build -o ..\publish
    #- name: start my tools on win
      #run: .\my-tools\CICDassist.exe
           
    - name: publish new chip
      env: 
        MYSERVERPAT :  ${{ secrets.JP_PAT }} 
      working-directory: my-tools
      run : .\CICDassist.exe --publish "$env:NEW_CHIP" "$env:MYSERVERPAT"
